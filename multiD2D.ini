[General]
image-path=./images
tkenv-plugin-path = ../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=500s
warmup-period=10s
repeat = 10
**.routingRecorder.enabled = false

############### Statistics ##################

seed-set = ${repetition}
**.vector-recording = true


################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
#**.nic.phy.channelModel= ${configFiles = xmldoc("config_channel_basic5.xml"), xmldoc("config_channel_basic7.xml"), xmldoc("config_channel_basic10.xml"), xmldoc("config_channel_basic12.xml"), xmldoc("config_channel_basic15.xml")}
#**.feedbackComputation = ${configFiles}
#**.nic.phy.channelModel= ${configFiles = xmldoc("config_channel_basic_shadowing.xml"), xmldoc("config_channel_basic_Dynpl.xml"), xmldoc("config_channel_basic_Dynpl_shadowing.xml")}
#**.feedbackComputation = ${configFiles}
**.nic.phy.channelModel = xmldoc("config_channel_basic.xml")
**.feedbackComputation = xmldoc( "config_channel_basic.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters ####################
# UEs attached to eNB
**.fbDelay = 1
**.feedbackType = "ALLBANDS"

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.deployer.numRbDl = 50
**.deployer.numRbUl = 50
**.numBands = 50

################ CQI Storage ################
**.cqiStorage = 0
################ No retranmsissions ##########
**.maxHarqRtx = 0

# ----------------------------------------------------------------------------- #
# Config "SinglePair"
#
# Do NOT run this config! It serves as base configuration for "SinglePair-UDP-*" and "SinglePair-TCP-*" configurations (see below).
# It includes two UEs served by one eNodeB. UEs are far from the eNB (~50m), but close to each other (20m)  
#
[Config SinglePair]
network=SingleCell_D2D

### eNodeBs configuration ###
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

### UEs configuration ###
*.numUeCell = 0
*.numUeD2DTx = ${numDevs = 2,5}
*.numUeD2DRx = ${numDevs}

*.ue*[0].macCellId = 1
*.ue*[0].masterId = 1
*.ue*[0].mobility.initFromDisplayString = false

**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
*.ueD2D*[*].mobility.constraintAreaMaxX = 550m
*.ueD2D*[*].mobility.constraintAreaMaxY = 550m
*.ueD2D*[*].mobility.constraintAreaMinX = 100m
*.ueD2D*[*].mobility.constraintAreaMinY = 100m
*.ueD2D*[*].mobility.initialX = uniform(300m,350m)
*.ueD2D*[*].mobility.initialY = uniform(320m,370m)
*.ueD2D*[*].mobility.initialZ = 0
*.ueD2D*[*].mobilityType = "StationaryMobility"

# ----------------------------------------------------------------------------- #
# Config "SinglePair-UDP-Infra"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the traditional infrastructure mode (two-hop path through the eNodeB)
#
[Config SinglePair-UDP-Infra]
extends=SinglePair

### Traffic configuration ###
*.ueD2D*[0].numUdpApps = 1

# Traffic between UEs (ueD2DTx[0] --> ueD2DRx[0])
# Transmitter
*.ueD2DTx[*].udpApp[*].typename = "UDPBasicApp"
*.ueD2DTx[*].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.ueD2DTx[*].udpApp[*].startTime = uniform(0s,0.02s)
*.ueD2DTx[*].udpApp[*].destAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
*.ueD2DTx[*].udpApp[*].messageLength = 1000B
*.ueD2DTx[*].udpApp[*].sendInterval = uniform(0s,0.02s)
*.ueD2DTx[*].udpApp[*].destPort = 1000
# Receiver
*.ueD2DRx[*].udpApp[*].typename = "UDPSink"
*.ueD2DRx[*].udpApp[*].localPort = 1000

# Disable D2D for the eNodeB and the UEs
*.eNodeB.d2dCapable = false
*.ueD2D*[*].d2dCapable = false
**.**.amcMode = "AUTO"



# ----------------------------------------------------------------------------- #
# Config "SinglePair-UDP-D2D"
#
# In this configuration, UEs run a VoIP application (using UDP as transport layer protocol)
# They communicate using the D2D link
#
[Config SinglePair-UDP-D2D]
extends=SinglePair-UDP-Infra

# Enable D2D for the eNodeB and the UEs involved in direct communications
*.eNodeB.d2dCapable = true
*.ueD2D*[*].d2dCapable = true
**.amcMode = "D2D"

# --- Set the D2D peering capabilities ---#
#
# For each D2D-capable UE, write a list of UEs (separated by blank spaces)
# representing the possible peering UEs. Note that this relationship is unidirectional.
# Here, ueD2DTx[0] --> ueD2DRx[0]
*.ueD2DTx[*].nic.d2dPeerAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.nic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNodeB.nic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false
**.d2dCqi = 7

[Config DistanceTest]
extends=SinglePair-UDP-D2D
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
#*.ueD2D*[*].mobility.acceleration = 0
#*.ueD2D*[*].mobility.angle = uniform(0deg, 360deg)
*.ueD2DTx[*].mobility.constraintAreaMaxX = 150m
*.ueD2DTx[*].mobility.constraintAreaMaxY = 150m
*.ueD2DTx[*].mobility.constraintAreaMinX = 100m
*.ueD2DTx[*].mobility.constraintAreaMinY = 100m
*.ueD2DTx[*].mobility.initialX = 100m
*.ueD2DTx[*].mobility.initialY = 150m
*.ueD2DTx[*].mobility.initialZ = 0
*.ueD2DTx[*].mobilityType = "StationaryMobility"

*.ueD2D*[*].mobility.angle = 0deg
*.ueD2DRx[*].mobility.constraintAreaMaxX = 1300m
*.ueD2DRx[*].mobility.constraintAreaMaxY = 150m
*.ueD2DRx[*].mobility.constraintAreaMinX = 120m
*.ueD2DRx[*].mobility.constraintAreaMinY = 150m
*.ueD2DRx[*].mobility.initialX = 120m
*.ueD2DRx[*].mobility.initialY = 150m
*.ueD2DRx[*].mobility.initialZ = 0
*.ueD2DRx[*].mobility.speed = 10mps
*.ueD2DRx[*].mobilityType = "LinearMobility"
**.maxHarqRtx = 0

[Config TestDistance]
extends=DistanceTest
#output-scalar-file = ${resultdir}/noHarq/${configname}/${configFiles}/${repetition}.sca
#output-vector-file = ${resultdir}/noHarq/${configname}/${configFiles}/${repetition}.vec
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec

[Config TestDistanceStored]
extends=DistanceTest
**.cqiStorage = ${store = 0s, 10ms, 20ms, 50ms, 70ms, 100ms, 250ms, 500ms, 700ms, 1s, 3s, 5s, 10s}
#output-scalar-file = ${resultdir}/${configname}/${store}/${configFiles}/${repetition}.sca
#output-vector-file = ${resultdir}/${configname}/${store}/${configFiles}/${repetition}.vec
output-scalar-file = ${resultdir}/${configname}/${store}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${store}/${repetition}.vec